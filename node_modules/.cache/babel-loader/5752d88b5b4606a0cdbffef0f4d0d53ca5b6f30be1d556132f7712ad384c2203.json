{"ast":null,"code":"import toast from \"react-hot-toast\";\n\n/** validate login page username */\n\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\n\n/** validate login password */\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\nexport async function resetPasswordValidation(values) {\n  const errors = passwordVerify({}, values);\n  if (values.password !== values.confirmPassword) {\n    errors.exist = toast.error(\"Password not match\");\n  }\n}\n\n/** validate password */\nfunction passwordVerify(errors = {}, values) {\n  /* eslint-disable no-useless-escape */\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    errors.password = toast.error(\"Password Required...!\");\n  } else if (values.password.includes(\" \")) {\n    errors.password = toast.error(\"Wrong Password...!\");\n  } else if (values.password.length < 4) {\n    errors.password = toast.error(\"Password must be more than 4 characters long\");\n  } else if (!specialChars.test(values.password)) {\n    errors.password = toast.error(\"Password must have special character\");\n  }\n  return errors;\n}\n\n/** validate username */\nfunction usernameVerify(error = {}, values) {\n  if (!values.username) {\n    error.username = toast.error(\"Username Required...!\");\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error(\"Invalid Username...!\");\n  }\n  return error;\n}","map":{"version":3,"names":["toast","usernameValidate","values","errors","usernameVerify","passwordValidate","passwordVerify","resetPasswordValidation","password","confirmPassword","exist","error","specialChars","includes","length","test","username"],"sources":["C:/Users/DELL/Documents/reactProjects/project/login_app/client/src/helper/validate.js"],"sourcesContent":["import toast from \"react-hot-toast\";\r\n\r\n/** validate login page username */\r\n\r\nexport async function usernameValidate(values) {\r\n  const errors = usernameVerify({}, values);\r\n  return errors;\r\n}\r\n\r\n/** validate login password */\r\nexport async function passwordValidate(values) {\r\n  const errors = passwordVerify({}, values);\r\n  return errors;\r\n}\r\n\r\nexport async function resetPasswordValidation(values) {\r\n  const errors = passwordVerify({}, values);\r\n\r\n  if (values.password !== values.confirmPassword) {\r\n    errors.exist = toast.error(\"Password not match\");\r\n  }\r\n}\r\n\r\n/** validate password */\r\nfunction passwordVerify(errors = {}, values) {\r\n  /* eslint-disable no-useless-escape */\r\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n\r\n  if (!values.password) {\r\n    errors.password = toast.error(\"Password Required...!\");\r\n  } else if (values.password.includes(\" \")) {\r\n    errors.password = toast.error(\"Wrong Password...!\");\r\n  } else if (values.password.length < 4) {\r\n    errors.password = toast.error(\r\n      \"Password must be more than 4 characters long\"\r\n    );\r\n  } else if (!specialChars.test(values.password)) {\r\n    errors.password = toast.error(\"Password must have special character\");\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\n/** validate username */\r\nfunction usernameVerify(error = {}, values) {\r\n  if (!values.username) {\r\n    error.username = toast.error(\"Username Required...!\");\r\n  } else if (values.username.includes(\" \")) {\r\n    error.username = toast.error(\"Invalid Username...!\");\r\n  }\r\n\r\n  return error;\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;;AAEnC;;AAEA,OAAO,eAAeC,gBAAgBA,CAACC,MAAM,EAAE;EAC7C,MAAMC,MAAM,GAAGC,cAAc,CAAC,CAAC,CAAC,EAAEF,MAAM,CAAC;EACzC,OAAOC,MAAM;AACf;;AAEA;AACA,OAAO,eAAeE,gBAAgBA,CAACH,MAAM,EAAE;EAC7C,MAAMC,MAAM,GAAGG,cAAc,CAAC,CAAC,CAAC,EAAEJ,MAAM,CAAC;EACzC,OAAOC,MAAM;AACf;AAEA,OAAO,eAAeI,uBAAuBA,CAACL,MAAM,EAAE;EACpD,MAAMC,MAAM,GAAGG,cAAc,CAAC,CAAC,CAAC,EAAEJ,MAAM,CAAC;EAEzC,IAAIA,MAAM,CAACM,QAAQ,KAAKN,MAAM,CAACO,eAAe,EAAE;IAC9CN,MAAM,CAACO,KAAK,GAAGV,KAAK,CAACW,KAAK,CAAC,oBAAoB,CAAC;EAClD;AACF;;AAEA;AACA,SAASL,cAAcA,CAACH,MAAM,GAAG,CAAC,CAAC,EAAED,MAAM,EAAE;EAC3C;EACA,MAAMU,YAAY,GAAG,yCAAyC;EAE9D,IAAI,CAACV,MAAM,CAACM,QAAQ,EAAE;IACpBL,MAAM,CAACK,QAAQ,GAAGR,KAAK,CAACW,KAAK,CAAC,uBAAuB,CAAC;EACxD,CAAC,MAAM,IAAIT,MAAM,CAACM,QAAQ,CAACK,QAAQ,CAAC,GAAG,CAAC,EAAE;IACxCV,MAAM,CAACK,QAAQ,GAAGR,KAAK,CAACW,KAAK,CAAC,oBAAoB,CAAC;EACrD,CAAC,MAAM,IAAIT,MAAM,CAACM,QAAQ,CAACM,MAAM,GAAG,CAAC,EAAE;IACrCX,MAAM,CAACK,QAAQ,GAAGR,KAAK,CAACW,KAAK,CAC3B,8CACF,CAAC;EACH,CAAC,MAAM,IAAI,CAACC,YAAY,CAACG,IAAI,CAACb,MAAM,CAACM,QAAQ,CAAC,EAAE;IAC9CL,MAAM,CAACK,QAAQ,GAAGR,KAAK,CAACW,KAAK,CAAC,sCAAsC,CAAC;EACvE;EAEA,OAAOR,MAAM;AACf;;AAEA;AACA,SAASC,cAAcA,CAACO,KAAK,GAAG,CAAC,CAAC,EAAET,MAAM,EAAE;EAC1C,IAAI,CAACA,MAAM,CAACc,QAAQ,EAAE;IACpBL,KAAK,CAACK,QAAQ,GAAGhB,KAAK,CAACW,KAAK,CAAC,uBAAuB,CAAC;EACvD,CAAC,MAAM,IAAIT,MAAM,CAACc,QAAQ,CAACH,QAAQ,CAAC,GAAG,CAAC,EAAE;IACxCF,KAAK,CAACK,QAAQ,GAAGhB,KAAK,CAACW,KAAK,CAAC,sBAAsB,CAAC;EACtD;EAEA,OAAOA,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}